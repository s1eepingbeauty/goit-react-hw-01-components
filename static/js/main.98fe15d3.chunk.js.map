{"version":3,"sources":["components/SocialProfile/profile.module.scss","components/FriendList/friendList.module.scss","components/Statistics/statistics.module.scss","components/TransactionHistory/transaction.module.scss","app.module.css","components/SocialProfile/Profile.jsx","components/Statistics/Statistics.jsx","components/FriendList/FriendListItem.jsx","components/FriendList/FriendList.jsx","components/TransactionHistory/TransactionHistory.jsx","App.jsx","index.js"],"names":["module","exports","Profile","name","avatar","tag","location","stats","className","styles","profile","description","src","alt","statsItem","label","quantity","followers","views","likes","propType","PropTypes","string","isRequired","arrayOf","number","defaultProps","Statistics","statistics","title","statsList","length","map","id","percentage","statsListItem","style","backgroundColor","Math","random","FriendListItem","isOnline","friendListItem","statusOnline","statusOffline","FriendList","friends","friendList","friend","TransactionHistory","items","transactionHistory","type","amount","currency","transaction","App","app","user","statisticalData","transactions","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.98fe15d3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"profile_profile__1qXa-\",\"avatar\":\"profile_avatar__GX_ZX\",\"name\":\"profile_name__1j2JY\",\"tag\":\"profile_tag__EtK9c\",\"location\":\"profile_location__1Duss\",\"stats\":\"profile_stats__2Vvud\",\"statsItem\":\"profile_statsItem__2Er86\",\"label\":\"profile_label__3NbJ2\",\"quantity\":\"profile_quantity__ImUON\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"friendList_friendList__1tp5i\",\"friendListItem\":\"friendList_friendListItem__vUym2\",\"avatar\":\"friendList_avatar__1nU7i\",\"name\":\"friendList_name__1yg2Q\",\"statusOnline\":\"friendList_statusOnline__3aVbn\",\"statusOffline\":\"friendList_statusOffline__1X-qf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"statistics_statistics__2nlUs\",\"title\":\"statistics_title__PMqlU\",\"statsList\":\"statistics_statsList__cY_iC\",\"statsListItem\":\"statistics_statsListItem__3d57z\",\"label\":\"statistics_label__pPguS\",\"percentage\":\"statistics_percentage__1uUNr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"transaction_transactionHistory__3Uwbr\",\"transaction\":\"transaction_transaction__2qKeJ\",\"type\":\"transaction_type__3AJYY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"app_app__1ho_l\"};","import PropTypes from 'prop-types';\nimport styles from './profile.module.scss';\n\nconst Profile = ({ name, avatar, tag, location, stats }) => (\n  <div className={styles.profile}>\n    <div className={styles.description}>\n      <img className={styles.avatar} src={avatar} alt=\"Аватар пользователя\" />\n      <p className={styles.name}>{name}</p>\n      <p className={styles.tag}>@{tag}</p>\n      <p className={styles.location}>{location}</p>\n    </div>\n    <ul className={styles.stats}>\n      <li className={styles.statsItem}>\n        <span className={styles.label}>Followers</span>\n        <span className={styles.quantity}>{stats.followers}</span>\n      </li>\n      <li className={styles.statsItem}>\n        <span className={styles.label}>Views</span>\n        <span className={styles.quantity}>{stats.views}</span>\n      </li>\n      <li className={styles.statsItem}>\n        <span className={styles.label}>Likes</span>\n        <span className={styles.quantity}>{stats.likes}</span>\n      </li>\n    </ul>\n  </div>\n);\n\nProfile.propType = {\n  name: PropTypes.string.isRequired,\n  avatar: PropTypes.string,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string,\n  stats: PropTypes.arrayOf({\n    followers: PropTypes.number,\n    views: PropTypes.number,\n    likes: PropTypes.number,\n  })\n}\n\nProfile.defaultProps = {\n  name: 'Anonymous',\n}\n\nexport default Profile;\n","import PropTypes from 'prop-types';\nimport styles from './statistics.module.scss';\n\nconst getBgColor = () =>\n  `rgb(${Math.random() * 255}, ${Math.random() * 255}, ${Math.random() * 255})`;\n\nconst Statistics = ({ stats }) => (\n  <section className={styles.statistics}>\n    <h2 className={styles.title}>Upload stats</h2>\n    <ul className={styles.statsList}>\n      {!!stats.length && stats.map(({ id, label, percentage }) => (              // !! - приведение к boolean\n        <li key={id} className={styles.statsListItem} style={{ backgroundColor: getBgColor() }}>\n          <span className={styles.label}>{label}</span>\n          <span className={styles.percentage}>{percentage}%</span>\n        </li>\n      ))}\n    </ul>\n  </section>\n);\n\nStatistics.propTypes = {\n  stats: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      percentage: PropTypes.number.isRequired,\n    }),\n  ),\n}\n\nexport default Statistics;\n","import PropTypes from 'prop-types';\nimport styles from './friendList.module.scss';\n\nconst FriendListItem = ({avatar, name, isOnline }) => (\n  <li className={styles.friendListItem}>\n    <span className={isOnline ? styles.statusOnline : styles.statusOffline}>{isOnline}</span>\n    <img className={styles.avatar} src={avatar} alt={name} />\n    <p className={styles.name}>{name}</p>\n  </li>\n);\n\nFriendListItem.propTypes = {\n  bookfriend: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    avatar: PropTypes.string,\n    name: PropTypes.string,\n    isOnline: PropTypes.bool,\n  }),\n};\n\nexport default FriendListItem;\n","import FriendListItem from './FriendListItem';\nimport styles from './friendList.module.scss';\n\nconst FriendList = ({ friends }) => (\n    <ul className={styles.friendList}>\n      {!!friends.length && friends.map((friend) => (\n        <FriendListItem\n          key={friend.id}\n          avatar={friend.avatar}\n          name={friend.name}\n          isOnline={friend.isOnline}\n        />\n      ))}\n    </ul>\n  );\n\nexport default FriendList;\n","import PropTypes from 'prop-types';\nimport styles from './transaction.module.scss';\n\nconst TransactionHistory = ({ items }) => (\n  <table className={styles.transactionHistory}>\n    <thead>\n      <tr>\n        <th>Type</th>\n        <th>Amount</th>\n        <th>Currency</th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {!!items.length && items.map(({ id, type, amount, currency }) => (\n        <tr key={id} className={styles.transaction}>\n          <td className={styles.type}>{type}</td>\n          <td>{amount}</td>\n          <td>{currency}</td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n\nTransactionHistory.propTypes = {\n  transaction: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      amount: PropTypes.string.isRequired,\n      currency: PropTypes.string.isRequired,\n    }),\n  ),\n}\n\nexport default TransactionHistory;\n","import Profile from './components/SocialProfile/Profile';\nimport user from './data/user.json';\nimport Statistics from './components/Statistics/Statistics';\nimport statisticalData from './data/statistical-data.json';\nimport FriendList from './components/FriendList/FriendList';\nimport friends from './data/friends.json';\nimport TransactionHistory from './components/TransactionHistory/TransactionHistory';\nimport transactions from './data/transactions.json';\nimport styles from './app.module.css';\n\nconst App = () => (\n  <>\n    <div className={styles.app}>\n      <Profile\n        name={user.name}\n        avatar={user.avatar}\n        tag={user.tag}\n        location={user.location}\n        stats={user.stats}\n      />\n      <Statistics stats={statisticalData} />\n      <FriendList friends={friends} />\n      <TransactionHistory items={transactions} />\n    </div>\n  </>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}